import os
import openai
import telebot
import requests
import json
import time
from datetime import datetime
from threading import Thread

# API tokens (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ Render –≤ Environment Variables)
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CRYPTOPANIC_API_KEY = os.getenv("CRYPTOPANIC_API_KEY")

# Telegram —á–∞—Ç –∏ –∞–¥–º–∏–Ω—ã
TARGET_CHAT_ID = -1002408729915
ADMINS = [7473992492, 5860994210]

bot = telebot.TeleBot(TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

BANNED_KEYWORDS = ["–∫–∞–∑–∏–Ω–æ", "—Å—Ç–∞–≤–∫–∏", "1win", "pin-up", "–∏–≥—Ä–∞–π –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π"]
SUSPICIOUS_PHRASES = set()
USER_WARNINGS = {}

# –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –Ω–∞—Ç–∏–≤–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
AD_LINK = "\n\nüí¨ –ù–∞–¥—ë–∂–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: https://app.leadteh.ru/w/dTeKr"

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è GPT
system_prompt = (
    "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –º–∞–π–Ω–∏–Ω–≥—É. –û—Ç–≤–µ—á–∞–π —Å—Ç—Ä–æ–≥–æ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –∫—Ä–∞—Ç–∫–æ. "
    "–†–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤ Antminer, Whatsminer, ROI, –¥–æ—Å—Ç–∞–≤–∫–µ –∏ —Å–µ—Ä–≤–∏—Å–µ."
)

# === GPT-–û–¢–í–ï–¢ ===
@bot.message_handler(func=lambda m: True)
def handle_all_messages(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    text = message.text.lower()

    # --- 1. –ö–æ–º–∞–Ω–¥–∞: –ø–æ–º–æ—â—å ---
    if text.startswith("/–ø–æ–º–æ—â—å"):
        bot.reply_to(message, (
            "\u2705 –≠—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç:\n"
            "1. –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–º–µ –º–∞–π–Ω–∏–Ω–≥–∞\n"
            "2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å—Ç–∏—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞\n"
            "3. –ó–∞—â–∏—â–∞—Ç—å —á–∞—Ç –æ—Ç —Å–ø–∞–º–∞ –∏ –∫–∞–∑–∏–Ω–æ\n"
            "4. –û–±—É—á–∞–µ—Ç—Å—è: –Ω–∞–ø–∏—à–∏—Ç–µ 'ban' –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –∏ –æ–Ω —ç—Ç–æ –∑–∞–ø–æ–º–Ω–∏—Ç\n"
            "5. –ö–æ–º–∞–Ω–¥–∞ /—Å—Ç–∞—Ç–∞ ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞"
        ))
        return

    # --- 2. –ö–æ–º–∞–Ω–¥–∞: —Å—Ç–∞—Ç–∞ ---
    if text.startswith("/—Å—Ç–∞—Ç–∞") and user_id in ADMINS:
        stats = get_chat_statistics()
        bot.reply_to(message, stats)
        return

    # --- 3. –ö–æ–º–∞–Ω–¥–∞: ban (–æ–±—É—á–µ–Ω–∏–µ) ---
    if text.startswith("ban") and message.reply_to_message:
        SUSPICIOUS_PHRASES.add(message.reply_to_message.text.lower())
        bot.reply_to(message, "–§—Ä–∞–∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö.")
        return

    # --- 4. –ú–æ–¥–µ—Ä–∞—Ü–∏—è: –∫–∞–∑–∏–Ω–æ/—Å–ø–∞–º ---
    if any(kw in text for kw in BANNED_KEYWORDS + list(SUSPICIOUS_PHRASES)):
        warnings = USER_WARNINGS.get(user_id, 0) + 1
        USER_WARNINGS[user_id] = warnings

        if warnings >= 3:
            try:
                bot.ban_chat_member(chat_id, user_id)
                bot.reply_to(message, "\u26d4 –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω –∑–∞ —Å–ø–∞–º.")
            except:
                pass
        else:
            bot.reply_to(message, f"\u26a0 –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {warnings}/3. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ ‚Äî –ø–æ–ª—É—á–∏—Ç–µ –±–∞–Ω.")
        return

    # --- 5. GPT –æ—Ç–≤–µ—Ç ---
    try:
        completion = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": message.text}
            ],
            temperature=0.4,
            max_tokens=1000
        )
        reply = completion.choices[0].message.content.strip()
        bot.reply_to(message, reply)
    except Exception as e:
        bot.reply_to(message, "\u274c –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ GPT. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# === –ö–ê–ñ–î–´–ï 3 –ß–ê–°–ê: –ù–û–í–û–°–¢–ò ===
def fetch_crypto_news():
    url = f"https://cryptopanic.com/api/v1/posts/?auth_token={CRYPTOPANIC_API_KEY}&currencies=BTC,ETH&public=true"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            posts = data.get("results", [])[:3]
            if not posts:
                return

            text = "\ud83d\udcc8 –ù–æ–≤–æ—Å—Ç–∏ –ø–æ –º–∞–π–Ω–∏–Ω–≥—É:\n"
            for post in posts:
                headline = post.get("title", "")
                link = post.get("url", "")
                text += f"\n\u2022 <a href='{link}'>{headline}</a>"

            text += AD_LINK
            bot.send_message(TARGET_CHAT_ID, text, parse_mode="HTML")
    except Exception as e:
        print("[!] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:", e)

# === –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ò–ô –¶–ò–ö–õ ===
def run_scheduled_news():
    while True:
        fetch_crypto_news()
        time.sleep(3 * 60 * 60)  # –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞

# === –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===
def get_chat_statistics():
    try:
        members = bot.get_chat_members_count(TARGET_CHAT_ID)
        admins = bot.get_chat_administrators(TARGET_CHAT_ID)
        return (
            f"\ud83d\udcca –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞:\n"
            f"\u2022 –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {members}\n"
            f"\u2022 –ê–¥–º–∏–Ω–æ–≤: {len(admins)}\n"
            f"\u2022 –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—Ä–∞–∑: {len(SUSPICIOUS_PHRASES)}"
        )
    except:
        return "\u274c –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."

# === –ó–ê–ü–£–°–ö ===
if __name__ == "__main__":
    Thread(target=run_scheduled_news).start()
    bot.polling(none_stop=True)
